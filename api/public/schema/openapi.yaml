openapi: 3.0.2
info:
  title: 'ID Vault'
  version: V1.0
  description: |
    API Details
    - Component: ID Vault
    - Reference: id-vault
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/id-vault) / [zip](https://github.com/ConductionNL/id-vault/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/id-vault-php) 
    - Datamodel: [postman](schema/id-vault.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  /api/accept_invites:
    post:
      tags:
        - AcceptInvite
      operationId: postAcceptInviteCollection
      summary: 'Creates a AcceptInvite resource.'
      responses:
        201:
          description: 'AcceptInvite resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
          links:
            GetAcceptInviteItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAcceptInviteItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/accept_invites/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AcceptInvite:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
        description: 'The new AcceptInvite resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/accept_invites/{id}':
    get:
      tags:
        - AcceptInvite
      operationId: getAcceptInviteItem
      summary: 'Retrieves a AcceptInvite resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AcceptInvite resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AcceptInvite
      operationId: deleteAcceptInviteItem
      summary: 'Removes the AcceptInvite resource.'
      responses:
        204:
          description: 'AcceptInvite resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AcceptInvite
      operationId: putAcceptInviteItem
      summary: 'Replaces the AcceptInvite resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AcceptInvite resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AcceptInvite:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
        description: 'The updated AcceptInvite resource'
    patch:
      tags:
        - AcceptInvite
      operationId: patchAcceptInviteItem
      summary: 'Updates the AcceptInvite resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AcceptInvite resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AcceptInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AcceptInvite-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AcceptInvite-write'
        description: 'The updated AcceptInvite resource'
  /api/access_tokens:
    post:
      tags:
        - AccessToken
      operationId: postAccessTokenCollection
      summary: 'Creates a AccessToken resource.'
      responses:
        201:
          description: 'AccessToken resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
          links:
            GetAccessTokenItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAccessTokenItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/access_tokens/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AccessToken:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AccessToken:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
        description: 'The new AccessToken resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/access_tokens/{id}':
    get:
      tags:
        - AccessToken
      operationId: getAccessTokenItem
      summary: 'Retrieves a AccessToken resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AccessToken resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - AccessToken
      operationId: putAccessTokenItem
      summary: 'Replaces the AccessToken resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AccessToken resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AccessToken:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AccessToken:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AccessToken-write'
        description: 'The updated AccessToken resource'
    delete:
      tags:
        - AccessToken
      operationId: deleteAccessTokenItem
      summary: 'Removes the AccessToken resource.'
      responses:
        204:
          description: 'AccessToken resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/access_tokens/{id}/audit_trail':
    get:
      tags:
        - AccessToken
      operationId: get_audit_trailAccessTokenItem
      summary: 'Retrieves a AccessToken resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AccessToken resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/api/access_tokens/{id}/change_log':
    get:
      tags:
        - AccessToken
      operationId: get_change_logsAccessTokenItem
      summary: 'Retrieves a AccessToken resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AccessToken resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccessToken:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccessToken-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /api/audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /api/change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /api/convert_user_groups:
    post:
      tags:
        - ConvertUserGroup
      operationId: postConvertUserGroupCollection
      summary: 'Creates a ConvertUserGroup resource.'
      responses:
        201:
          description: 'ConvertUserGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
          links:
            GetConvertUserGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getConvertUserGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/convert_user_groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
        description: 'The new ConvertUserGroup resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/convert_user_groups/{id}':
    get:
      tags:
        - ConvertUserGroup
      operationId: getConvertUserGroupItem
      summary: 'Retrieves a ConvertUserGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ConvertUserGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ConvertUserGroup
      operationId: deleteConvertUserGroupItem
      summary: 'Removes the ConvertUserGroup resource.'
      responses:
        204:
          description: 'ConvertUserGroup resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ConvertUserGroup
      operationId: putConvertUserGroupItem
      summary: 'Replaces the ConvertUserGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ConvertUserGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
        description: 'The updated ConvertUserGroup resource'
    patch:
      tags:
        - ConvertUserGroup
      operationId: patchConvertUserGroupItem
      summary: 'Updates the ConvertUserGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ConvertUserGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ConvertUserGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ConvertUserGroup-write'
        description: 'The updated ConvertUserGroup resource'
  /api/create_groups:
    post:
      tags:
        - CreateGroup
      operationId: postCreateGroupCollection
      summary: 'Creates a CreateGroup resource.'
      responses:
        201:
          description: 'CreateGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
          links:
            GetCreateGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCreateGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/create_groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CreateGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/CreateGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
        description: 'The new CreateGroup resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/create_groups/{id}':
    get:
      tags:
        - CreateGroup
      operationId: getCreateGroupItem
      summary: 'Retrieves a CreateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'CreateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - CreateGroup
      operationId: deleteCreateGroupItem
      summary: 'Removes the CreateGroup resource.'
      responses:
        204:
          description: 'CreateGroup resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - CreateGroup
      operationId: putCreateGroupItem
      summary: 'Replaces the CreateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'CreateGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CreateGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/CreateGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
        description: 'The updated CreateGroup resource'
    patch:
      tags:
        - CreateGroup
      operationId: patchCreateGroupItem
      summary: 'Updates the CreateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'CreateGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CreateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CreateGroup:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/CreateGroup-write'
        description: 'The updated CreateGroup resource'
  /api/dossiers:
    post:
      tags:
        - Dossier
      operationId: postDossierCollection
      summary: 'Creates a Dossier resource.'
      responses:
        201:
          description: 'Dossier resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
          links:
            GetDossierItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDossierItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/dossiers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Dossier-write'
        description: 'The new Dossier resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/dossiers/{id}':
    get:
      tags:
        - Dossier
      operationId: getDossierItem
      summary: 'Retrieves a Dossier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Dossier resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Dossier
      operationId: deleteDossierItem
      summary: 'Removes the Dossier resource.'
      responses:
        204:
          description: 'Dossier resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Dossier
      operationId: putDossierItem
      summary: 'Replaces the Dossier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Dossier resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Dossier-write'
        description: 'The updated Dossier resource'
    patch:
      tags:
        - Dossier
      operationId: patchDossierItem
      summary: 'Updates the Dossier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Dossier resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Dossier-write'
        description: 'The updated Dossier resource'
  /api/get_scopes:
    post:
      tags:
        - GetScopes
      operationId: postGetScopesCollection
      summary: 'Creates a GetScopes resource.'
      responses:
        201:
          description: 'GetScopes resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
          links:
            GetGetScopesItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGetScopesItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/get_scopes/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GetScopes:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GetScopes:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
        description: 'The new GetScopes resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/get_scopes/{id}':
    get:
      tags:
        - GetScopes
      operationId: getGetScopesItem
      summary: 'Retrieves a GetScopes resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'GetScopes resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - GetScopes
      operationId: deleteGetScopesItem
      summary: 'Removes the GetScopes resource.'
      responses:
        204:
          description: 'GetScopes resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - GetScopes
      operationId: putGetScopesItem
      summary: 'Replaces the GetScopes resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'GetScopes resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GetScopes:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GetScopes:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
        description: 'The updated GetScopes resource'
    patch:
      tags:
        - GetScopes
      operationId: patchGetScopesItem
      summary: 'Updates the GetScopes resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'GetScopes resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GetScopes:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GetScopes-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GetScopes:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GetScopes-write'
        description: 'The updated GetScopes resource'
  /api/group_invites:
    post:
      tags:
        - GroupInvite
      operationId: postGroupInviteCollection
      summary: 'Creates a GroupInvite resource.'
      responses:
        201:
          description: 'GroupInvite resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
          links:
            GetGroupInviteItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupInviteItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/group_invites/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GroupInvite:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GroupInvite:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
        description: 'The new GroupInvite resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/group_invites/{id}':
    get:
      tags:
        - GroupInvite
      operationId: getGroupInviteItem
      summary: 'Retrieves a GroupInvite resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'GroupInvite resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - GroupInvite
      operationId: deleteGroupInviteItem
      summary: 'Removes the GroupInvite resource.'
      responses:
        204:
          description: 'GroupInvite resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - GroupInvite
      operationId: putGroupInviteItem
      summary: 'Replaces the GroupInvite resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'GroupInvite resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GroupInvite:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GroupInvite:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
        description: 'The updated GroupInvite resource'
    patch:
      tags:
        - GroupInvite
      operationId: patchGroupInviteItem
      summary: 'Updates the GroupInvite resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'GroupInvite resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupInvite:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupInvite-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GroupInvite:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GroupInvite-write'
        description: 'The updated GroupInvite resource'
  /api/group_remove_users:
    post:
      tags:
        - GroupRemoveUser
      operationId: postGroupRemoveUserCollection
      summary: 'Creates a GroupRemoveUser resource.'
      responses:
        201:
          description: 'GroupRemoveUser resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
          links:
            GetGroupRemoveUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupRemoveUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/group_remove_users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
        description: 'The new GroupRemoveUser resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/group_remove_users/{id}':
    get:
      tags:
        - GroupRemoveUser
      operationId: getGroupRemoveUserItem
      summary: 'Retrieves a GroupRemoveUser resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'GroupRemoveUser resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - GroupRemoveUser
      operationId: deleteGroupRemoveUserItem
      summary: 'Removes the GroupRemoveUser resource.'
      responses:
        204:
          description: 'GroupRemoveUser resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - GroupRemoveUser
      operationId: putGroupRemoveUserItem
      summary: 'Replaces the GroupRemoveUser resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'GroupRemoveUser resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
        description: 'The updated GroupRemoveUser resource'
    patch:
      tags:
        - GroupRemoveUser
      operationId: patchGroupRemoveUserItem
      summary: 'Updates the GroupRemoveUser resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'GroupRemoveUser resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
            text/html:
              schema:
                $ref: '#/components/schemas/GroupRemoveUser-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
          text/html:
            schema:
              $ref: '#/components/schemas/GroupRemoveUser-write'
        description: 'The updated GroupRemoveUser resource'
  /api/groups:
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/groups/uuid/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  '/api/groups/uuid/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/api/groups/{id}':
    get:
      tags:
        - Group
      operationId: get_groupGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  /api/mails:
    post:
      tags:
        - Mail
      operationId: postMailCollection
      summary: 'Creates a Mail resource.'
      responses:
        201:
          description: 'Mail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Mail-read'
          links:
            GetMailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/mails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Mail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Mail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Mail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Mail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Mail-write'
        description: 'The new Mail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/mails/{id}':
    get:
      tags:
        - Mail
      operationId: getMailItem
      summary: 'Retrieves a Mail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Mail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Mail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Mail
      operationId: deleteMailItem
      summary: 'Removes the Mail resource.'
      responses:
        204:
          description: 'Mail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Mail
      operationId: putMailItem
      summary: 'Replaces the Mail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Mail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Mail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Mail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Mail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Mail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Mail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Mail-write'
        description: 'The updated Mail resource'
    patch:
      tags:
        - Mail
      operationId: patchMailItem
      summary: 'Updates the Mail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Mail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Mail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Mail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Mail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Mail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Mail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Mail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Mail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Mail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Mail-write'
        description: 'The updated Mail resource'
  /api/send_lists:
    get:
      tags:
        - SendList
      operationId: getSendListCollection
      summary: 'Retrieves the collection of SendList resources.'
      responses:
        200:
          description: 'SendList collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/SendList:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/SendList:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendList-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - SendList
      operationId: postSendListCollection
      summary: 'Creates a SendList resource.'
      responses:
        201:
          description: 'SendList resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
          links:
            GetSendListItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSendListItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/send_lists/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        description: 'The new SendList resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/send_lists/{id}':
    get:
      tags:
        - SendList
      operationId: getSendListItem
      summary: 'Retrieves a SendList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'SendList resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - SendList
      operationId: deleteSendListItem
      summary: 'Removes the SendList resource.'
      responses:
        204:
          description: 'SendList resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - SendList
      operationId: putSendListItem
      summary: 'Replaces the SendList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'SendList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        description: 'The updated SendList resource'
    patch:
      tags:
        - SendList
      operationId: patchSendListItem
      summary: 'Updates the SendList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'SendList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/SendList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/SendList-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SendList:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SendList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/SendList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/SendList-write'
        description: 'The updated SendList resource'
  /api/user_groups:
    post:
      tags:
        - UserGroup
      operationId: postUserGroupCollection
      summary: 'Creates a UserGroup resource.'
      responses:
        201:
          description: 'UserGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
          links:
            GetUserGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/user_groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/UserGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
        description: 'The new UserGroup resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/user_groups/{id}':
    get:
      tags:
        - UserGroup
      operationId: getUserGroupItem
      summary: 'Retrieves a UserGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'UserGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - UserGroup
      operationId: deleteUserGroupItem
      summary: 'Removes the UserGroup resource.'
      responses:
        204:
          description: 'UserGroup resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - UserGroup
      operationId: putUserGroupItem
      summary: 'Replaces the UserGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'UserGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/UserGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
        description: 'The updated UserGroup resource'
    patch:
      tags:
        - UserGroup
      operationId: patchUserGroupItem
      summary: 'Updates the UserGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'UserGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/UserGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserGroup:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/UserGroup-write'
        description: 'The updated UserGroup resource'
  /api/users:
    post:
      tags:
        - User
      operationId: postUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The new User resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/api/users/{id}':
    get:
      tags:
        - User
      operationId: getUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'User resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - User
      operationId: deleteUserItem
      summary: 'Removes the User resource.'
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - User
      operationId: putUserItem
      summary: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The updated User resource'
    patch:
      tags:
        - User
      operationId: patchUserItem
      summary: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The updated User resource'
components:
  schemas:
    AcceptInvite-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    AcceptInvite-write:
      type: object
      description: ''
      properties:
        groupId:
          description: 'group id'
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
    'AcceptInvite:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    'AcceptInvite:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        groupId:
          description: 'group id'
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
    AccessToken-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        tokenType:
          description: 'The transportation type of the token'
          type: string
        expiresIn:
          description: 'The time in wisch the acces token will expire'
          type: integer
        scope:
          description: 'The scopes profided by the acces token'
          type: string
        accessToken:
          description: 'A JWT reprecentation of the acces token'
          type: string
        state:
          description: 'A unique validator provided by your application to check the validaty of the call'
          type: string
        newUser:
          description: 'Whether this user is new or not'
          type: boolean
    AccessToken-write:
      type: object
      description: ''
      properties:
        grantType:
          description: 'The UUID identifier of this object'
          type: string
        clientId:
          description: 'The id of your application'
          type: string
        goal:
          description: 'The goal of the request'
          type: string
          nullable: true
        clientSecret:
          description: 'The secret of your application'
          type: string
        code:
          description: 'The code given to your application on'
          type: string
        state:
          description: 'A unique validator provided by your application to check the validaty of the call'
          type: string
    'AccessToken:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        tokenType:
          description: 'The transportation type of the token'
          type: string
        expiresIn:
          description: 'The time in wisch the acces token will expire'
          type: integer
        scope:
          description: 'The scopes profided by the acces token'
          type: string
        accessToken:
          description: 'A JWT reprecentation of the acces token'
          type: string
        state:
          description: 'A unique validator provided by your application to check the validaty of the call'
          type: string
        newUser:
          description: 'Whether this user is new or not'
          type: boolean
    'AccessToken:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        grantType:
          description: 'The UUID identifier of this object'
          type: string
        clientId:
          description: 'The id of your application'
          type: string
        goal:
          description: 'The goal of the request'
          type: string
          nullable: true
        clientSecret:
          description: 'The secret of your application'
          type: string
        code:
          description: 'The code given to your application on'
          type: string
        state:
          description: 'A unique validator provided by your application to check the validaty of the call'
          type: string
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ConvertUserGroup-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    ConvertUserGroup-write:
      type: object
      description: ''
      properties:
        clientId:
          description: 'client id'
          type: string
    'ConvertUserGroup:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    'ConvertUserGroup:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        clientId:
          description: 'client id'
          type: string
    CreateGroup-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        group:
          description: 'created group'
          type: array
          items:
            type: string
    CreateGroup-write:
      type: object
      description: ''
      properties:
        clientId:
          description: 'client id'
          type: string
        name:
          description: 'client id'
          type: string
        description:
          description: 'client id'
          type: string
        organization:
          description: 'client id'
          type: string
    'CreateGroup:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        group:
          description: 'created group'
          type: array
          items:
            type: string
    'CreateGroup:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        clientId:
          description: 'client id'
          type: string
        name:
          description: 'client id'
          type: string
        description:
          description: 'client id'
          type: string
        organization:
          description: 'client id'
          type: string
    Dossier-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the Dossier'
          type: string
        description:
          description: 'The description of a the dossier'
          type: string
        goal:
          description: 'The goal of a the dossier'
          type: string
        expiryDate:
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        legal:
          description: 'whether or not to this Dossier is on legal basis.'
          type: boolean
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
      required:
        - name
        - goal
        - expiryDate
        - sso
        - scopes
    Dossier-write:
      type: object
      description: ''
      required:
        - name
        - goal
        - expiryDate
        - sso
        - scopes
      properties:
        name:
          description: 'Name of the Dossier'
          type: string
        description:
          description: 'The description of a the dossier'
          type: string
        goal:
          description: 'The goal of a the dossier'
          type: string
        expiryDate:
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        legal:
          description: 'whether or not to this Dossier is on legal basis.'
          type: boolean
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
    'Dossier:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the Dossier'
          type: string
        description:
          description: 'The description of a the dossier'
          type: string
        goal:
          description: 'The goal of a the dossier'
          type: string
        expiryDate:
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        legal:
          description: 'whether or not to this Dossier is on legal basis.'
          type: boolean
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
      required:
        - name
        - goal
        - expiryDate
        - sso
        - scopes
    'Dossier:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - goal
        - expiryDate
        - sso
        - scopes
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the Dossier'
          type: string
        description:
          description: 'The description of a the dossier'
          type: string
        goal:
          description: 'The goal of a the dossier'
          type: string
        expiryDate:
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        legal:
          description: 'whether or not to this Dossier is on legal basis.'
          type: boolean
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
    GetScopes-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        authorization:
          description: 'uuid of authorization'
          type: string
        status:
          description: 'uuid of authorization'
          type: string
      required:
        - scopes
        - authorization
    GetScopes-write:
      type: object
      description: ''
      required:
        - scopes
        - authorization
      properties:
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        authorization:
          description: 'uuid of authorization'
          type: string
    'GetScopes:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        authorization:
          description: 'uuid of authorization'
          type: string
        status:
          description: 'uuid of authorization'
          type: string
      required:
        - scopes
        - authorization
    'GetScopes:jsonld-write':
      type: object
      description: ''
      required:
        - scopes
        - authorization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        authorization:
          description: 'uuid of authorization'
          type: string
    Group-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        groups:
          description: 'array of groups'
          type: array
          items:
            type: string
    Group-write:
      type: object
      description: ''
      properties:
        clientId:
          description: 'client id'
          type: string
        organization:
          description: 'organization uri'
          type: string
    'Group:jsonld-read':
      type: object
      description: ''
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        groups:
          description: 'array of groups'
          type: array
          items:
            type: string
    'Group:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        clientId:
          description: 'client id'
          type: string
        organization:
          description: 'organization uri'
          type: string
    GroupInvite-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    GroupInvite-write:
      type: object
      description: ''
      properties:
        groupId:
          description: 'group id'
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
        accepted:
          description: 'if user has already accepted invite'
          type: boolean
    'GroupInvite:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    'GroupInvite:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        groupId:
          description: 'group id'
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
        accepted:
          description: 'if user has already accepted invite'
          type: boolean
    GroupRemoveUser-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    GroupRemoveUser-write:
      type: object
      description: ''
      properties:
        groupId:
          description: 'group id'
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
    'GroupRemoveUser:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
    'GroupRemoveUser:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        groupId:
          description: 'group id'
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
    Mail-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        applicationId:
          description: 'id of the application that wishes to send the mail'
          type: string
        body:
          description: 'html body of mail'
          type: string
        subject:
          description: 'subject of the mail'
          type: string
        receiver:
          description: 'the receiver of the mail'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
        message:
          description: 'return message'
          type: string
      required:
        - applicationId
        - body
        - subject
        - receiver
        - sender
    Mail-write:
      type: object
      description: ''
      required:
        - applicationId
        - body
        - subject
        - receiver
        - sender
      properties:
        applicationId:
          description: 'id of the application that wishes to send the mail'
          type: string
        body:
          description: 'html body of mail'
          type: string
        subject:
          description: 'subject of the mail'
          type: string
        receiver:
          description: 'the receiver of the mail'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
    'Mail:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        applicationId:
          description: 'id of the application that wishes to send the mail'
          type: string
        body:
          description: 'html body of mail'
          type: string
        subject:
          description: 'subject of the mail'
          type: string
        receiver:
          description: 'the receiver of the mail'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
        message:
          description: 'return message'
          type: string
      required:
        - applicationId
        - body
        - subject
        - receiver
        - sender
    'Mail:jsonld-write':
      type: object
      description: ''
      required:
        - applicationId
        - body
        - subject
        - receiver
        - sender
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        applicationId:
          description: 'id of the application that wishes to send the mail'
          type: string
        body:
          description: 'html body of mail'
          type: string
        subject:
          description: 'subject of the mail'
          type: string
        receiver:
          description: 'the receiver of the mail'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
    SendList-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          description: 'The action type'
          type: string
        sendList:
          description: 'A BS/SendList resource. Used for Adding a email(s) as BS/Subscriber(s) to a BS/SendList. And used for sending an email to all BS/SendList->Subscribers.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        resource:
          description: 'The resource of a new SendList. Used for creating a BS/SendList.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        name:
          description: 'The name of a new SendList. Used for creating a BS/SendList.'
          type: string
        description:
          description: 'The description of a new SendList. Used for creating a BS/SendList.'
          type: string
        mail:
          description: 'True if this is a new mailing sendList. Used for creating a BS/SendList.'
          type: boolean
        phone:
          description: 'True if this is a new phone sendList. Used for creating a BS/SendList.'
          type: boolean
        title:
          description: 'The title for sending an text/email to all BS/SendList->Subscribers.'
          type: string
        message:
          description: 'The message for sending an email to all BS/SendList->Subscribers.'
          type: string
        text:
          description: 'The text for sending an text to all BS/SendList->Subscribers.'
          type: string
        html:
          description: 'The html for sending an email to all BS/SendList->Subscribers.'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
        emails:
          description: 'The email adresses used to add subscribers to a BS/sendList'
          type: array
          items:
            type: string
        groups:
          description: 'The groups used to add subscribers to a BS/sendList. WARNING: Leaving this empty when updating a sendList will remove all the groups from this sendList!!!'
          type: array
          items:
            type: string
        result:
          description: 'The result'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this claim was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this claim was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - action
    SendList-write:
      type: object
      description: ''
      required:
        - action
      properties:
        action:
          description: 'The action type'
          type: string
        sendList:
          description: 'A BS/SendList resource. Used for Adding a email(s) as BS/Subscriber(s) to a BS/SendList. And used for sending an email to all BS/SendList->Subscribers.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        resource:
          description: 'The resource of a new SendList. Used for creating a BS/SendList.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        name:
          description: 'The name of a new SendList. Used for creating a BS/SendList.'
          type: string
        description:
          description: 'The description of a new SendList. Used for creating a BS/SendList.'
          type: string
        mail:
          description: 'True if this is a new mailing sendList. Used for creating a BS/SendList.'
          type: boolean
        phone:
          description: 'True if this is a new phone sendList. Used for creating a BS/SendList.'
          type: boolean
        clientSecret:
          description: 'The secret of your application. Used for creating a BS/SendList.'
          type: string
        title:
          description: 'The title for sending an text/email to all BS/SendList->Subscribers.'
          type: string
        message:
          description: 'The message for sending an email to all BS/SendList->Subscribers.'
          type: string
        text:
          description: 'The text for sending an text to all BS/SendList->Subscribers.'
          type: string
        html:
          description: 'The html for sending an email to all BS/SendList->Subscribers.'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
        emails:
          description: 'The email adresses used to add subscribers to a BS/sendList'
          type: array
          items:
            type: string
        groups:
          description: 'The groups used to add subscribers to a BS/sendList. WARNING: Leaving this empty when updating a sendList will remove all the groups from this sendList!!!'
          type: array
          items:
            type: string
    'SendList:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          description: 'The action type'
          type: string
        sendList:
          description: 'A BS/SendList resource. Used for Adding a email(s) as BS/Subscriber(s) to a BS/SendList. And used for sending an email to all BS/SendList->Subscribers.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        resource:
          description: 'The resource of a new SendList. Used for creating a BS/SendList.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        name:
          description: 'The name of a new SendList. Used for creating a BS/SendList.'
          type: string
        description:
          description: 'The description of a new SendList. Used for creating a BS/SendList.'
          type: string
        mail:
          description: 'True if this is a new mailing sendList. Used for creating a BS/SendList.'
          type: boolean
        phone:
          description: 'True if this is a new phone sendList. Used for creating a BS/SendList.'
          type: boolean
        title:
          description: 'The title for sending an text/email to all BS/SendList->Subscribers.'
          type: string
        message:
          description: 'The message for sending an email to all BS/SendList->Subscribers.'
          type: string
        text:
          description: 'The text for sending an text to all BS/SendList->Subscribers.'
          type: string
        html:
          description: 'The html for sending an email to all BS/SendList->Subscribers.'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
        emails:
          description: 'The email adresses used to add subscribers to a BS/sendList'
          type: array
          items:
            type: string
        groups:
          description: 'The groups used to add subscribers to a BS/sendList. WARNING: Leaving this empty when updating a sendList will remove all the groups from this sendList!!!'
          type: array
          items:
            type: string
        result:
          description: 'The result'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this claim was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this claim was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - action
    'SendList:jsonld-write':
      type: object
      description: ''
      required:
        - action
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        action:
          description: 'The action type'
          type: string
        sendList:
          description: 'A BS/SendList resource. Used for Adding a email(s) as BS/Subscriber(s) to a BS/SendList. And used for sending an email to all BS/SendList->Subscribers.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        resource:
          description: 'The resource of a new SendList. Used for creating a BS/SendList.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        name:
          description: 'The name of a new SendList. Used for creating a BS/SendList.'
          type: string
        description:
          description: 'The description of a new SendList. Used for creating a BS/SendList.'
          type: string
        mail:
          description: 'True if this is a new mailing sendList. Used for creating a BS/SendList.'
          type: boolean
        phone:
          description: 'True if this is a new phone sendList. Used for creating a BS/SendList.'
          type: boolean
        clientSecret:
          description: 'The secret of your application. Used for creating a BS/SendList.'
          type: string
        title:
          description: 'The title for sending an text/email to all BS/SendList->Subscribers.'
          type: string
        message:
          description: 'The message for sending an email to all BS/SendList->Subscribers.'
          type: string
        text:
          description: 'The text for sending an text to all BS/SendList->Subscribers.'
          type: string
        html:
          description: 'The html for sending an email to all BS/SendList->Subscribers.'
          type: string
        sender:
          description: 'the sender of the mail'
          type: string
        emails:
          description: 'The email adresses used to add subscribers to a BS/sendList'
          type: array
          items:
            type: string
        groups:
          description: 'The groups used to add subscribers to a BS/sendList. WARNING: Leaving this empty when updating a sendList will remove all the groups from this sendList!!!'
          type: array
          items:
            type: string
    User-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        authorization:
          description: 'created authorization'
          type: string
    User-write:
      type: object
      description: ''
      properties:
        username:
          description: username
          type: string
        clientId:
          description: 'client id'
          type: string
        scopes:
          description: 'array of scopes'
          type: array
          items:
            type: string
    'User:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        authorization:
          description: 'created authorization'
          type: string
    'User:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        username:
          description: username
          type: string
        clientId:
          description: 'client id'
          type: string
        scopes:
          description: 'array of scopes'
          type: array
          items:
            type: string
    UserGroup-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        groups:
          description: 'array of groups'
          type: array
          items:
            type: string
    UserGroup-write:
      type: object
      description: ''
      properties:
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
    'UserGroup:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        groups:
          description: 'array of groups'
          type: array
          items:
            type: string
    'UserGroup:jsonld-write':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        clientId:
          description: 'client id'
          type: string
        username:
          description: username
          type: string
definitions:
  AcceptInvite-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  AccessToken-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  AccessToken-write:
    properties:
      goal:
        description: 'The goal of the request'
        type: string
        example: 'log in to commonground'
    required: []
  ConvertUserGroup-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  CreateGroup-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  Dossier-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  GetScopes-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  Group-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      groups:
        description: 'array of groups'
        type: array
        example: ''
    required: []
  GroupInvite-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  GroupRemoveUser-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  Mail-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  SendList-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      dateCreated:
        description: 'The moment this claim was created'
        type: \Datetime
      dateModified:
        description: 'The moment this claim was last Modified'
        type: \Datetime
    required: []
  User-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
    required: []
  User-write:
    properties:
      scopes:
        description: 'array of scopes'
        type: array
        example: ''
    required: []
  UserGroup-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      groups:
        description: 'array of groups'
        type: array
        example: ''
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-01-26 08:18:40'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-01-26 08:18:40'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-01-26 08:18:40'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-01-26 08:18:40'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: AcceptInvite
    description: |
      
      
      
  -
    name: AccessToken
    description: |
      
      
      
  -
    name: ConvertUserGroup
    description: |
      
      
      
  -
    name: CreateGroup
    description: |
      
      
      
  -
    name: Dossier
    description: |
      
      
      
  -
    name: GetScopes
    description: |
      
      
      
  -
    name: Group
    description: |
      
      
      
  -
    name: GroupInvite
    description: |
      
      
      
  -
    name: GroupRemoveUser
    description: |
      
      
      
  -
    name: Mail
    description: |
      
      
      
  -
    name: SendList
    description: |
      
      
      
  -
    name: User
    description: |
      
      
      
  -
    name: UserGroup
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: id-vault.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
